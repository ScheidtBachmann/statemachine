<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.scheidtbachmann.statemachine</groupId>
		<artifactId>de.scheidtbachmann.statemachine.parent</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>
	<artifactId>de.scheidtbachmann.statemachine.cli</artifactId>
	<packaging>jar</packaging>
	
	<properties>
		<selfContainedExecutableName>scc</selfContainedExecutableName>
	</properties>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
			</plugin>
			<!-- fetch the SWT runtime dependencies and extract the artifacts into dedicated subfolders being; they are included into the uber jar below -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-classes</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.swt</groupId>
									<artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
									<version>4.3</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.outputDirectory}/swt/org.eclipse.swt.cocoa.macosx.x86_64</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.swt</groupId>
									<artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
									<version>4.3</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.outputDirectory}/swt/org.eclipse.swt.gtk.linux.x86_64</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.swt</groupId>
									<artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
									<version>4.3</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.outputDirectory}/swt/org.eclipse.swt.win32.win32.x86_64</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.swt</groupId>
									<artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
									<version>4.3</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.outputDirectory}/swt/org.eclipse.swt.win32.win32.x86</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>de.scheidtbachmann.statemachine.diagrams</artifactId>
									<version>${project.version}</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.outputDirectory}/diagramming</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>de.scheidtbachmann.statemachine.cli.Generator</mainClass>
						</transformer>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>plugin.properties</resource>
						</transformer>
					</transformers>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/INDEX.LIST</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
								<exclude>.options</exclude>
								<exclude>.api_description</exclude>
								<exclude>*.profile</exclude>
								<exclude>*.html</exclude>
								<exclude>about.*</exclude>
								<exclude>about_files/*</exclude>
								<exclude>plugin.xml</exclude>
								<exclude>modeling32.png</exclude>
								<exclude>systembundle.properties</exclude>
								<exclude>profile.list</exclude>
								<exclude>**/*._trace</exclude>
								<exclude>**/*.g</exclude>
								<exclude>**/*.mwe2</exclude>
								<exclude>**/*.xtext</exclude>
							</excludes>
						</filter>
					</filters>
					<shadedArtifactAttached>true</shadedArtifactAttached>
					<shadedClassifierName>app</shadedClassifierName>
					<minimizeJar>false</minimizeJar>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>createSelfContainedExecutableUnix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<executableJ8>${selfContainedExecutableName}Java8</executableJ8>
				<executable>${selfContainedExecutableName}</executable>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>createSelfContainedExecutableJava8</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<commandlineArgs>-c 'echo exec java -Xmx512m -jar \$0 \"\$@\" > ${executableJ8}; echo  >> ${executableJ8}; cat `ls target/*-app.jar` >> ${executableJ8}; chmod u+x ${executableJ8}'</commandlineArgs>
								</configuration>
							</execution>
							<execution>
								<id>createSelfContainedExecutable</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<commandlineArgs>-c 'echo exec java -Xmx512m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/jdk.internal.loader=ALL-UNNAMED -jar \$0 \"\$@\" > ${executable}; echo  >> ${executable}; cat `ls target/*-app.jar` >> ${executable}; chmod u+x ${executable}'</commandlineArgs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>createSelfContainedExecutableMac</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<executableJ8>${selfContainedExecutableName}Java8</executableJ8>
				<executable>${selfContainedExecutableName}</executable>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>createSelfContainedExecutableJava8</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<commandlineArgs>-c 'echo exec java -XstartOnFirstThread -Xmx512m -jar \$0 \"\$@\" > ${executableJ8}; echo  >> ${executableJ8}; cat `ls target/*-app.jar` >> ${executableJ8}; chmod u+x ${executableJ8}'</commandlineArgs>
								</configuration>
							</execution>
							<execution>
								<id>createSelfContainedExecutable</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<commandlineArgs>-c 'echo exec java -XstartOnFirstThread -Xmx512m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/jdk.internal.loader=ALL-UNNAMED -jar \$0 \"\$@\" > ${executable}; echo  >> ${executable}; cat `ls target/*-app.jar` >> ${executable}; chmod u+x ${executable}'</commandlineArgs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>createSelfContainedExecutableWindows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<executableWinJ8>${selfContainedExecutableName}Java8.bat</executableWinJ8>
				<executableWin>${selfContainedExecutableName}.bat</executableWin>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>createSelfContainedExecutableJava8</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cmd</executable>
									<commandlineArgs><![CDATA[/c echo @java -Xmx512m -jar %0 %1 %2 %3 > ${executableWinJ8} & echo @exit /b >> ${executableWinJ8} & type target\de.scheidtbachmann.statemachine.cli-0.1.0-SNAPSHOT-app.jar >> ${executableWinJ8}]]></commandlineArgs>
								</configuration>
							</execution>
							<execution>
								<id>createSelfContainedExecutable</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cmd</executable>
									<commandlineArgs><![CDATA[/c echo @java -Xmx512m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/jdk.internal.loader=ALL-UNNAMED -jar %0 %1 %2 %3 > ${executableWin} & echo @exit /b >> ${executableWin} & type target\de.scheidtbachmann.statemachine.cli-0.1.0-SNAPSHOT-app.jar >> ${executableWin}]]></commandlineArgs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>de.scheidtbachmann.statemachine</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picoCliVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.registry</artifactId>
			<!-- the version is defined in the parent artifact in 'dependencyManagement' -->
		</dependency>
		<dependency>
			<groupId>org.freehep</groupId>
			<artifactId>freehep-graphicsio-svg</artifactId>
			<!-- the version is defined in the parent artifact in 'dependencyManagement' -->
		</dependency>
		<dependency>
			<groupId>org.eclipse.elk</groupId>
			<artifactId>org.eclipse.elk.alg.graphviz.layouter</artifactId>
			<!-- the version is defined in the parent artifact in 'dependencyManagement' -->
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>de.scheidtbachmann.statemachine.diagrams</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
