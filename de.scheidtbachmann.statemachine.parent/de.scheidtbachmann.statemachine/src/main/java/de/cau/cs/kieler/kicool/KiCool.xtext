/*
 * KIELER - Kiel Integrated Environment for Layout Eclipse RichClient
 * 
 * http://www.informatik.uni-kiel.de/rtsys/kieler/
 * 
 * Copyright 2016 by
 * + Kiel University
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * This code is provided under the terms of the Eclipse Public License (EPL).
 * See the file epl-v10.html for the license text.
 */
grammar de.cau.cs.kieler.kicool.KiCool with de.cau.cs.kieler.kexpressions.kext.KExt

import "http://kieler.cs.cau.de/kicool/0.1.0" as kicool
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://kieler.cs.cau.de/annotations" as annotations
import "http://kieler.cs.cau.de/kexpressions/0.1.2" as kexpressions
import "http://kieler.cs.cau.de/keffects/0.1.0" as keffects
import "http://kieler.cs.cau.de/kext/0.1.0" as kext

/**
 * @author ssm, als
 * @kieler.design 2016-10-19 proposed 
 * @kieler.rating 2016-10-19 proposed yellow
 */
 
System returns kicool::System:
    pragmas+=Pragma*
    annotations += Annotation*
    public?='public'?
    developer?='developer'?
    simulation?='simulation'?
    'system' id = QualifiedID
    'label' label = EString
    ('config' config=JsonObjectValue)?
    (intermediates += IntermediateReference)*
    processors = ProcessorGroup
;

IntermediateReference returns kicool::IntermediateReference:
    'intermediate' id = QualifiedID ('alias' alias = EString)?
;

ProcessorGroup returns kicool::ProcessorGroup:
    ('label' label = EString)?
    
    (
        processors += Processor
        |
        'system' processors += ProcessorSystem
        |
        ('['
            processors += ProcessorAlternativeGroup
        ']')
        |
        ('['
            processors += ProcessorGroup
        ']')
    )+
;

Processor returns kicool::ProcessorReference:
    ('pre' 'process' preprocesses += CoProcessor)*
    id = QualifiedID
    ('config' preconfig = JsonObjectValue ('post' postconfig = JsonObjectValue)?)?
    ('intermediate' metric = [kicool::IntermediateReference|QualifiedID])?
    ('post' 'process' postprocesses += CoProcessor)*
;

CoProcessor returns kicool::ProcessorReference: 
    (silent?='silent')?
    id = QualifiedID
    ('config' preconfig = JsonObjectValue ('post' postconfig = JsonObjectValue)?)?
;

ProcessorSystem returns kicool::ProcessorSystem:
    id = QualifiedID
;

ProcessorAlternativeGroup returns kicool::ProcessorAlternativeGroup:
    ('label' label = EString)? 
    
    (
        processors += ProcessorGroup
    ('|'
        processors += ProcessorGroup)+
    )
;